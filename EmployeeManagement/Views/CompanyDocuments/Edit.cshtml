@model EmployeeManagement.Models.CompanyDocument

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "CompanyDocuments", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>CompanyDocument</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyId, "CompanyId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CompanyId", (IEnumerable<SelectListItem>)ViewBag.CompanyIdList, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CompanyId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DocumentName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.DocumentName, new { htmlAttributes = new { @class = "form-control" } })*@
                @*@Html.DisplayFor(model => model.CompanyDocumentsType.DocumentTypeName)*@
                @Html.DropDownList("DocumentName", (IEnumerable<SelectListItem>)ViewBag.DocumentType, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DocumentName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DocumentPath, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.DocumentPath, new { htmlAttributes = new { @class = "form-control" } })*@
                <input type="file" name="DocumentFile" class="form-control" />
                @Html.ValidationMessageFor(model => model.DocumentPath, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">

            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Existing Document</label>
            <div class="col-md-2">
                @Html.ActionLink("DOWNLOAD TO SEE", "ShowDocument", "CompanyDocuments", null, htmlAttributes: new { @class = "form-control", border = "none" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreatedBy, "CreatedBy", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CreatedBy", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
